        -:    0:Source:blackjack.c
        -:    0:Graph:test_blackjack-blackjack.gcno
        -:    0:Data:test_blackjack-blackjack.gcda
        -:    0:Runs:1
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include <time.h>
        -:    4:#include "blackjack.h"
        -:    5:#include <stdbool.h>
        -:    6:
        -:    7:/*  Main logic for Blackjack utility, including 
        -:    8:    call from command line and game loop and
        -:    9:    initialization.
        -:   10:*/
        -:   11:
        -:   12:// get_input returns whether user input is yes or not
        1:   13:bool get_input(){
        -:   14:	char input;
        1:   15:	scanf("%c", &input);
        1:   16:        if (input == 'y' || input == 'Y') {
    #####:   17:		return true;
        -:   18:	}
        1:   19:	return false;
        -:   20:}
        -:   21:
        -:   22:// main game logic
        1:   23:void play_blackjack(int *balance) {
        -:   24:    // initialization
        -:   25:    Card deck[NUM_CARDS];
        -:   26:    Hand playerHand;
        1:   27:    srand((unsigned int)time(NULL)); // Setup random seed
        -:   28:    char continuePlaying;
        1:   29:    initialize_deck(deck);
        1:   30:    initialize_hand(&playerHand);
        1:   31:    int initialBet = 0;
        -:   32:
        -:   33:    // handle initial bet
        1:   34:    printf("Enter the bet amount: $");
        1:   35:    scanf("%d", &initialBet);
        -:   36:
        -:   37:    // draw initial two cards
        3:   38:    for (int i = 0; i < 2; i++) {
        2:   39:        draw_card(deck, &playerHand);
        2:   40:        printf("You drew: %s\n", playerHand.cards[i].name);
        -:   41:    }
        1:   42:    printf("Your hand value is: %d\n", playerHand.value);
        -:   43:
        -:   44:    // Game loop
        -:   45:    do {
        2:   46:        printf("Would you like to draw another card? (y/n): ");
        2:   47:        scanf(" %c", &continuePlaying);
        2:   48:        if (continuePlaying == 'y' || continuePlaying == 'Y') {
        1:   49:            draw_card(deck, &playerHand);
        1:   50:            printf("You drew: %s\n", playerHand.cards[playerHand.cardCount - 1].name);
        1:   51:            printf("Your hand value is: %d\n", playerHand.value);
        -:   52:
        1:   53:            if (playerHand.value > 21) {
    #####:   54:                printf("Bust! Your hand value exceeded 21. Game over.\n");
    #####:   55:                break;
        -:   56:            }
        -:   57:        }
        2:   58:    } while (continuePlaying == 'y' || continuePlaying == 'Y');
        -:   59:
        1:   60:    if (playerHand.value <= 21) {
        1:   61:        printf("Your final hand value is: %d. Thank you for playing!\n", playerHand.value);
        -:   62:    }
        -:   63:
        -:   64:    /*
        -:   65:    // Get the game result
        -:   66:    game_result(&playerHand, &dealerHand, bet);
        -:   67:*/
        1:   68:}
        -:   69:
        -:   70:
        -:   71:// command line call
        1:   72:int main(int argc, char* argv[]) {
        1:   73:    int balance = 500;
        1:   74:    printf("Welcome to Blackjack!\n");
        -:   75:
        1:   76:    while (balance > 0) {
        1:   77:        play_blackjack(&balance);
        1:   78:        printf("Continue? ");
        1:   79:        if (!get_input()) {
        1:   80:            break;
        -:   81:        }
        -:   82:    }
        1:   83:    printf("bye");
        -:   84:
        1:   85:    return 0;
        -:   86:}
